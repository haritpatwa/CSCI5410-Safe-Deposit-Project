{"version":3,"sources":["logo.svg","components/Login/Login.js","components/Registration/Registration.js","components/Dashboard/bar-graph.png","components/Dashboard/Dashboard.js","components/QuestionsPage/QuestionPage.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","handleInp","event","id","target","form","state","value","setState","login","e","a","preventDefault","collection","db","col","loading","error","getDocs","result","data","docs","map","doc","ans","filter","d","email","password","length","console","log","localStorage","setItem","balance","q1","q2","q3","q4","cipher","boxNumber","window","location","href","getData","Fragment","className","type","placeholder","onChange","disabled","role","onClick","class","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","this","React","Component","Registration","start","register","col1","AWS","require","awsConfig","config","update","docClient","DynamoDB","DocumentClient","count","randomNumber","Math","random","toFixed","split","addDoc","members","pubsub","sentby","finalBoxNumber","input","params","TableName","Item","put","err","JSON","stringify","docc","boxIdDelete","ref","deleteDoc","Key","delete","alert","Dashboard","logout","clear","generatereport","jsPDF","setFont","text","get","i","line","getItem","addPage","today","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","addImage","bargraph","save","emailId","QuestionPage","answers","CaesarCipher","cipherQuestion","parseInt","cipherAns","dateTime","concat","randomIntFromInterval","getRandomString","min","max","floor","s","leftShifts","substring","str","num","charcode","charCodeAt","String","fromCharCode","UpdateExpression","ExpressionAttributeValues","ReturnValues","randomChars","charAt","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eea49254.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Login.css';\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getFirestore, collection, getDocs, addDoc , deleteDoc, doc } from 'firebase/firestore/lite';\r\n\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        form : {\r\n            email : \"\",\r\n            password : \"\",\r\n            q1 : \"\",\r\n            q2 : \"\",\r\n            q3 : \"\",\r\n            q4 : \"\",\r\n            cipher : \"\",\r\n            boxNumber:\"\"\r\n           \r\n        },\r\n        loading : false,\r\n        error : false\r\n    };\r\n\r\n    const firebaseConfig = {\r\n      apiKey: \"AIzaSyBq9kQwzVeAFVE45OB4sRdaChNFO4H7blU\",\r\n      authDomain: \"safe-deposit-30066.firebaseapp.com\",\r\n      projectId: \"safe-deposit-30066\",\r\n      storageBucket: \"safe-deposit-30066.appspot.com\",\r\n      messagingSenderId: \"122396467700\",\r\n      appId: \"1:122396467700:web:4e20ba9f930b1a857859a1\"\r\n    };\r\n    \r\n    const app = initializeApp(firebaseConfig);\r\n    this.db = getFirestore(app);\r\n  }\r\n  \r\n  handleInp = (event) => {\r\n    let id = event.target.id\r\n    let form = this.state.form\r\n    form[id] = event.target.value;\r\n    this.setState({form : form})\r\n  }\r\n\r\n login = async (e) => {\r\n    e.preventDefault();\r\n    const col = await collection(this.db, 'UserDetails');\r\n    await this.setState({loading : true, error : false})\r\n    const result = await getDocs(col);\r\n    const data = result.docs.map(doc => doc.data());\r\n    let ans = data.filter((d)=> {\r\n      return d.email==this.state.form.email && d.password==this.state.form.password\r\n    })\r\n    await this.setState({loading : false})\r\n    if(ans.length == 0){\r\n      this.setState({error : true})\r\n    } else {\r\n     \r\n      await result.docs.map(doc => {\r\n        if(doc.data().email == ans[0].email){\r\n          console.log(\"email:\",ans[0].email);\r\n          localStorage.setItem('email',ans[0].email)\r\n          localStorage.setItem('balance',ans[0].balance);\r\n          localStorage.setItem('q1',ans[0].q1)\r\n          localStorage.setItem('q2',ans[0].q2)\r\n          localStorage.setItem('q3',ans[0].q3)\r\n          localStorage.setItem('q4',ans[0].q4)\r\n          localStorage.setItem('cipher',ans[0].cipher)\r\n          localStorage.setItem('boxNumber',ans[0].boxNumber)\r\n          window.location.href = \"/questionpage\"\r\n         \r\n        }\r\n      })\r\n     \r\n    }\r\n  }\r\n  \r\n  getData = () => {\r\n  \r\n    return <React.Fragment>\r\n        <div className=\"card col-md-5 color\">\r\n        <h3>Log In</h3>\r\n        <table className=\"table\">\r\n        <tbody>\r\n            <tr>\r\n                <td>Email</td>\r\n                <td>:</td>\r\n                <td><input id=\"email\" type=\"email\" className=\"form-control\" placeholder=\"abc@xyz.com\" value={this.state.form.email} onChange={this.handleInp}/></td>\r\n            </tr>\r\n            <tr>\r\n                <td>Password</td>\r\n                <td>:</td>\r\n                <td><input id=\"password\" type=\"password\" className=\"form-control\" placeholder=\"Enter Password\" value={this.state.form.password} onChange={this.handleInp}/></td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    {\r\n    this.state.loading ?\r\n    <button className=\"btn btn-success\" type=\"button\" disabled>\r\n      <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n      Loading...\r\n    </button>\r\n    :\r\n    <button className=\"btn btn-success\" onClick={this.login}>Login</button>\r\n  }\r\n      <br></br>\r\n        </div>\r\n        {\r\n          this.state.error ? \r\n          <div class=\"alert alert-danger\" role=\"alert\">\r\n            Invalid credentials\r\n        </div>\r\n        : \"\"\r\n        }\r\n       \r\n    </React.Fragment>\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.getData()\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport './Registration.css';\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getFirestore, collection, getDocs, addDoc, deleteDoc, doc } from 'firebase/firestore/lite';\r\n\r\nclass Registration extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      form: {\r\n        cipher: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        q1: \"\",\r\n        q2: \"\",\r\n        q3: \"\",\r\n        q4: \"\",\r\n        boxNumber: \"\"\r\n      },\r\n      loading: false,\r\n      start: true\r\n    };\r\n\r\n    const firebaseConfig = {\r\n      apiKey: \"AIzaSyBq9kQwzVeAFVE45OB4sRdaChNFO4H7blU\",\r\n      authDomain: \"safe-deposit-30066.firebaseapp.com\",\r\n      projectId: \"safe-deposit-30066\",\r\n      storageBucket: \"safe-deposit-30066.appspot.com\",\r\n      messagingSenderId: \"122396467700\",\r\n      appId: \"1:122396467700:web:4e20ba9f930b1a857859a1\"\r\n    };\r\n\r\n    const app = initializeApp(firebaseConfig);\r\n    this.db = getFirestore(app);\r\n  }\r\n\r\n  handleInp = (event) => {\r\n    let id = event.target.id\r\n    let form = this.state.form\r\n    form[id] = event.target.value;\r\n    this.setState({ form: form, start: false })\r\n  }\r\n\r\n  register = async (e) => {\r\n    e.preventDefault();\r\n    //For Box\r\n    const col1 = await collection(this.db, 'Users');\r\n    const result = await getDocs(col1);\r\n    const data = result.docs.map(doc => doc.data());\r\n    var AWS = require(\"aws-sdk\");\r\n    let awsConfig = {\r\n      \"region\": \"us-east-1\",\r\n      \"accessKeyId\": \"AKIA4RW42NZLJPIGWUHA\", \"secretAccessKey\": \"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\"\r\n    };\r\n    AWS.config.update(awsConfig);\r\n    let docClient = new AWS.DynamoDB.DocumentClient();\r\n    let ans = data.filter((d) => {\r\n      return d.count < 3\r\n    })\r\n    let finalBoxNumber;\r\n    if (ans.length == 0) {\r\n      //create new safedepositbox\r\n      let randomNumber = Math.random().toFixed(16).split(\".\")[1];\r\n      await addDoc(col1, {\r\n        balance: 5000,\r\n        count: 1,\r\n        members: [this.state.form.email],\r\n        pubsub: false,\r\n        sentby: \"\",\r\n        boxNumber: randomNumber\r\n      });\r\n      finalBoxNumber=randomNumber;\r\n      var input = {\r\n        \"boxId\": randomNumber,\r\n        \"balance\": 5000,\r\n        \"count\": 1,\r\n        \"members\": [this.state.form.email],\r\n        \"pubsub\": false,\r\n        \"sentby\": \"\"\r\n      };\r\n      var params = {\r\n        TableName: \"User\",\r\n        Item: input\r\n      };\r\n      docClient.put(params, function (err, data) {\r\n\r\n        if (err) {\r\n          console.log(\"users::save::error - \" + JSON.stringify(err, null, 2));\r\n        } else {\r\n          console.log(\"users::save::success\");\r\n        }\r\n      });\r\n\r\n\r\n\r\n\r\n    } else {\r\n\r\n      console.log(\"Came here\");\r\n      let docc = \"\"\r\n      let boxIdDelete = \"\"\r\n      await result.docs.map(doc => {\r\n        if (doc.data().count < 3) {\r\n          docc = doc.ref;\r\n          boxIdDelete = doc.data().boxNumber\r\n        }\r\n      })\r\n      await deleteDoc(docc);\r\n      var params = {\r\n        TableName: \"User\",\r\n        Key: {\r\n          \"boxId\": boxIdDelete\r\n        }\r\n      };\r\n      docClient.delete(params, function (err, data) {\r\n\r\n        if (err) {\r\n          console.log(\"users::delete::error - \" + JSON.stringify(err, null, 2));\r\n        } else {\r\n          console.log(\"users::delete::success\");\r\n        }\r\n      });\r\n      ans[0].members[ans[0].count] = this.state.form.email\r\n      ans[0].count = ans[0].count + 1\r\n      console.log(ans[0]);\r\n      finalBoxNumber=ans[0].boxNumber;\r\n      await addDoc(col1, ans[0]);\r\n\r\n      var input = {\r\n        \"boxId\": ans[0].boxNumber,\r\n        \"balance\": ans[0].balance,\r\n        \"count\": ans[0].count,\r\n        \"members\": ans[0].members,\r\n        \"pubsub\": ans[0].pubsub,\r\n        \"sentby\": ans[0].sentby\r\n      };\r\n\r\n      var params = {\r\n        TableName: \"User\",\r\n        Item: input\r\n      };\r\n      docClient.put(params, function (err, data) {\r\n\r\n        if (err) {\r\n          console.log(\"users::save::error - \" + JSON.stringify(err, null, 2));\r\n        } else {\r\n          console.log(\"users::save::success\");\r\n        }\r\n      });\r\n    }\r\n    const col = await collection(this.db, 'UserDetails');\r\n    await this.setState({ loading: true })\r\n    await addDoc(col, {\r\n      cipher: this.state.form.cipher,\r\n      email: this.state.form.email,\r\n      password: this.state.form.password,\r\n      q1: this.state.form.q1,\r\n      q2: this.state.form.q2,\r\n      q3: this.state.form.q3,\r\n      q4: this.state.form.q4,\r\n      boxNumber: finalBoxNumber\r\n    });\r\n    await this.setState({ loading: false, start: true })\r\n\r\n   alert(\"Registration is done\");\r\n    window.location.href = \"/\"\r\n\r\n  }\r\n\r\n  getData = () => {\r\n\r\n\r\n    return <React.Fragment>\r\n      \r\n      <div className=\"card col-md-5 color\">\r\n\r\n        <h3>Sign Up</h3>\r\n        <table className=\"table\">\r\n          <tbody>\r\n            <tr>\r\n              <td>Email</td>\r\n              <td>:</td>\r\n              <td><input id=\"email\" type=\"email\" className=\"form-control\" placeholder=\"abc@dal.ca\" value={this.state.form.email} onChange={this.handleInp} /></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Password</td>\r\n              <td>:</td>\r\n              <td><input id=\"password\" type=\"password\" className=\"form-control\" placeholder=\"Enter Password\" value={this.state.form.password} onChange={this.handleInp} /></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Favourite Colour</td>\r\n              <td>:</td>\r\n              <td><input id=\"q1\" type=\"text\" className=\"form-control\" placeholder=\"Answer Required*\" value={this.state.form.q1} onChange={this.handleInp} /></td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>Favourite Movie</td>\r\n              <td>:</td>\r\n              <td><input id=\"q2\" type=\"text\" className=\"form-control\" placeholder=\"Answer Required*\" value={this.state.form.q2} onChange={this.handleInp} /></td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>Favourite Number</td>\r\n              <td>:</td>\r\n              <td><input id=\"q3\" type=\"text\" className=\"form-control\" placeholder=\"Answer Required*\" value={this.state.form.q3} onChange={this.handleInp} /></td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>Favourite City</td>\r\n              <td>:</td>\r\n              <td><input id=\"q4\" type=\"text\" className=\"form-control\" placeholder=\"Answer Required*\" value={this.state.form.q4} onChange={this.handleInp} /></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Example \"ABC\"</td>\r\n              <td>:</td>\r\n              <td>For value as \"1\": \"BCD\"</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Cipher Value</td>\r\n              <td>:</td>\r\n              <td><input id=\"cipher\" type=\"text\" className=\"form-control\" placeholder=\"value Required*\" value={this.state.form.cipher} onChange={this.handleInp} /></td>\r\n            </tr>\r\n\r\n          </tbody>\r\n        </table>\r\n        {\r\n          this.state.loading ?\r\n            <button className=\"btn btn-success\" type=\"button\" disabled>\r\n              <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n              Loading...\r\n            </button>\r\n            :\r\n            <button className=\"btn btn-success\" onClick={this.register}>Register</button>\r\n        }\r\n        <br></br>\r\n        {\r\n          this.state.loading && !this.state.start ?\r\n            <div class=\"alert alert-success\" role=\"alert\">\r\n              Successfully registered !\r\n            </div>\r\n            : \"\"\r\n        }\r\n      </div>\r\n    </React.Fragment>\r\n  }\r\n\r\n  render() {\r\n    return (\r\n     \r\n        \r\n\r\n     \r\n      this.getData()\r\n     \r\n    )\r\n  }\r\n}\r\n\r\nexport default Registration;","export default __webpack_public_path__ + \"static/media/bar-graph.bd060ef9.png\";","import React, { Component } from 'react'\r\nimport './Dashboard.css'\r\nimport { jsPDF } from 'jspdf';\r\nimport bargraph from './bar-graph.png';\r\n\r\nexport class Dashboard extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            email: \"\",\r\n            balance: \"\",\r\n            q1: \"\",\r\n            q2: \"\",\r\n            q3: \"\",\r\n            q4: \"\",\r\n            cipher: \"\",\r\n            boxNumber: \"\"\r\n        };\r\n       \r\n    }\r\n    \r\n    componentWillMount() {\r\n\r\n        let emailId = localStorage.getItem(\"email\");\r\n        let balance = localStorage.getItem(\"balance\");\r\n        let q1 = localStorage.getItem(\"q1\");\r\n        let q2 = localStorage.getItem(\"q2\");\r\n        let q3 = localStorage.getItem(\"q3\");\r\n        let q4 = localStorage.getItem(\"q4\");\r\n        let cipher = localStorage.getItem(\"cipher\");\r\n        let boxNumber = localStorage.getItem(\"boxNumber\");\r\n       \r\n\r\n        console.log(\"email retrieve : \", emailId);\r\n        console.log(\"q1 retrieve : \", q1);\r\n        console.log(\"q2 retrieve : \", q2);\r\n        console.log(\"q3 retrieve : \", q3);\r\n        console.log(\"q4 retrieve : \", q4);\r\n        console.log(\"cipher retrieve : \", cipher);\r\n        console.log(\"boxNumber retrieve : \", boxNumber);\r\n\r\n        this.setState({\r\n            email: emailId,\r\n            balance: balance,\r\n            q1: q1,\r\n            q2: q2,\r\n            q3: q3,\r\n            q4: q4,\r\n            cipher: cipher,\r\n            boxNumber: boxNumber\r\n        });\r\n\r\n    }\r\n    logout = async (e) => {\r\n        e.preventDefault();\r\n        localStorage.clear();\r\n        window.location.href = \"/\"\r\n\r\n    }\r\n    generatereport = async (e) => {\r\n        e.preventDefault();\r\n        var doc = new jsPDF('landscape', 'px', 'a4', 'false');\r\n        doc.setFont('Helvertica', 'bold')\r\n        doc.text(300, 60, 'Log in statistics')\r\n        doc.setFont('Helvertica', 'normal')\r\n        var AWS = require(\"aws-sdk\");\r\n        let awsConfig = {\r\n            \"region\": \"us-east-1\",\r\n            \"accessKeyId\": \"AKIA4RW42NZLJPIGWUHA\", \"secretAccessKey\": \"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\"\r\n        };\r\n        AWS.config.update(awsConfig);\r\n\r\n        let docClient = new AWS.DynamoDB.DocumentClient();\r\n\r\n        var params = {\r\n            TableName: \"loginstatistics\",\r\n            Key: {\r\n                \"boxNumber\": this.state.boxNumber\r\n            }\r\n        };\r\n        docClient.get(params, function (err, data) {\r\n            if (err) {\r\n                console.log(\"users::fetchOneByKey::error - \" + JSON.stringify(err, null, 2));\r\n            }\r\n            else {\r\n                console.log(\"users::fetchOneByKey::success - \" + JSON.stringify(data, null, 2));\r\n                for (let i = 0; i < data.Item.line.length; i++) {\r\n                    doc.text(60, 80+20*i, data.Item.line[i]);\r\n                }\r\n                let boxNumber = localStorage.getItem(\"boxNumber\");\r\n                let emailId = localStorage.getItem(\"email\");\r\n\r\n               \r\n                var params = {\r\n                    TableName: \"withdrawaldetails\",\r\n                    Key: {\r\n                        \"email\": emailId\r\n                    }\r\n                };\r\n                doc.addPage();\r\n               \r\n              \r\n                docClient.get(params, function (err, data) {\r\n                    if (err) {\r\n                        console.log(\"users::fetchOneByKey::error - \" + JSON.stringify(err, null, 2));\r\n                    }\r\n                    else {\r\n                        console.log(\"users::fetchOneByKey::success - \" + JSON.stringify(data, null, 2));\r\n\r\n                        if(!data.Item){\r\n                            doc.setFont('Helvertica', 'bold')\r\n                            doc.text(300, 60, 'Withdrawal Graph')\r\n                            doc.text(60,80,\"Sorry no withdrawal from you side, therefore no graph\");\r\n                            doc.save(boxNumber + '.pdf')\r\n\r\n                        }else{\r\n                            var today = new Date();\r\n                            var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n                            var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n                            var dateTime = date + ' ' + time;\r\n\r\n                            // for (let i = 0; i < data.Item.NewValue.length; i++) {\r\n                            //     console.log(data.Item.NewValue[i]);\r\n                            //     doc.text(60, 80+20*i, 'User: '+emailId+' Withdrawal Amount: '+data.Item.NewValue[i]+' Time: '+dateTime);\r\n                            // }\r\n                            doc.setFont('Helvertica', 'bold')\r\n                            doc.text(300, 60, 'Withdrawal Graph')\r\n                            doc.addImage(bargraph,'PNG',65,20,500,400);\r\n                            doc.save(boxNumber + '.pdf')\r\n                        \r\n                        }\r\n                        \r\n                       \r\n                    }\r\n                });\r\n            \r\n               \r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                <div id='button'>\r\n                    <button className=\"btn btn-success\" onClick={this.logout}> Logout</button>\r\n                </div>\r\n                <div>\r\n                    <h1>Sucessful log in</h1>\r\n                    <h1>Hello user:  {this.state.email}</h1>\r\n                  \r\n\r\n                    <div id='generatereport'>\r\n                        <button className=\"btn btn-success\" onClick={this.generatereport}> Generate Report</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { Component } from 'react'\r\n\r\nimport './QuestionPage.css';\r\n\r\nexport class QuestionPage extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            form: {\r\n                email: \"\",\r\n                q1: \"\",\r\n                q2: \"\",\r\n                q3: \"\",\r\n                q4: \"\",\r\n                cipher: \"\",\r\n                random: [\"Favourite Colour\", \"Favourite Movie\", \"Favourite Number\", \"Favourite City\"],\r\n                randomNumber: this.randomIntFromInterval(0, 3),\r\n                boxNumber: \"\",\r\n                cipherQuestion: this.getRandomString(3),\r\n                ans: \"\",\r\n                cipherAns: \"\"\r\n            }\r\n            ,\r\n            loading: false,\r\n            error: false\r\n        };\r\n    }\r\n    componentWillMount() {\r\n\r\n        let emailId = localStorage.getItem(\"email\");\r\n        let q1 = localStorage.getItem(\"q1\");\r\n        let q2 = localStorage.getItem(\"q2\");\r\n        let q3 = localStorage.getItem(\"q3\");\r\n        let q4 = localStorage.getItem(\"q4\");\r\n        let cipher = localStorage.getItem(\"cipher\");\r\n        let boxNumber = localStorage.getItem(\"boxNumber\");\r\n\r\n        console.log(\"email retrieve : \", emailId);\r\n        console.log(\"q1 retrieve : \", q1);\r\n        console.log(\"q2 retrieve : \", q2);\r\n        console.log(\"q3 retrieve : \", q3);\r\n        console.log(\"q4 retrieve : \", q4);\r\n        console.log(\"cipher retrieve : \", cipher);\r\n        console.log(\"boxNumber retrieve : \", boxNumber);\r\n\r\n        this.setState({\r\n            email: emailId,\r\n            q1: q1,\r\n            q2: q2,\r\n            q3: q3,\r\n            q4: q4,\r\n            cipher: cipher,\r\n            boxNumber: boxNumber\r\n        });\r\n    }\r\n    randomIntFromInterval(min, max) { // min and max included \r\n        return Math.floor(Math.random() * (max - min + 1) + min)\r\n    }\r\n    leftShifting(s, leftShifts) {\r\n        return s.substring(leftShifts) + s.substring(0, leftShifts);\r\n    }\r\n    CaesarCipher(str, num) {\r\n\r\n        var result = '';\r\n        var charcode = 0;\r\n\r\n        for (var i = 0; i < str.length; i++) {\r\n            charcode = (str[i].charCodeAt()) + num;\r\n            result += String.fromCharCode(charcode);\r\n        }\r\n\r\n        var AWS = require(\"aws-sdk\");\r\n        let awsConfig = {\r\n            \"region\": \"us-east-1\",\r\n            \"accessKeyId\": \"AKIA4RW42NZLJPIGWUHA\", \"secretAccessKey\": \"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\"\r\n        };\r\n        AWS.config.update(awsConfig);\r\n        let docClient = new AWS.DynamoDB.DocumentClient();\r\n\r\n        var params = {\r\n            TableName: \"forcipher\",\r\n            Key: { \"cipher\": \"forcipher\" },\r\n            UpdateExpression: \"set ciphervalue = :byUser, valueofcipher = :byuser2, countofcipher = :byuser3\",\r\n            ExpressionAttributeValues: {\r\n                \":byUser\": result,\r\n                \":byuser2\":str,\r\n                \":byuser3\":num\r\n            },\r\n            ReturnValues: \"UPDATED_NEW\"\r\n    \r\n        };\r\n        docClient.update(params, function (err, data) {\r\n    \r\n            if (err) {\r\n                console.log(\"users::update::error - \" + JSON.stringify(err, null, 2));\r\n            } else {\r\n                console.log(\"users::update::success \"+JSON.stringify(data) );\r\n            }\r\n        });\r\n\r\n        return result;\r\n\r\n    }\r\n    getRandomString(length) {\r\n        var randomChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        var result = '';\r\n        for (var i = 0; i < length; i++) {\r\n            result += randomChars.charAt(Math.floor(Math.random() * randomChars.length));\r\n        }\r\n        return result;\r\n    }\r\n    handleInp = (event) => {\r\n        let id = event.target.id\r\n        let form = this.state.form\r\n        form[id] = event.target.value;\r\n        this.setState({ form: form })\r\n    }\r\n    login = async (e) => {\r\n        e.preventDefault();\r\n        await this.setState({ loading: false })\r\n        let q1 = localStorage.getItem(\"q1\");\r\n        let q2 = localStorage.getItem(\"q2\");\r\n        let q3 = localStorage.getItem(\"q3\");\r\n        let q4 = localStorage.getItem(\"q4\");\r\n        let cipher = localStorage.getItem(\"cipher\");\r\n        let answers = [q1, q2, q3, q4];\r\n        console.log(\"question: \", answers);\r\n        console.log(\"cipher: \", cipher);\r\n        console.log(\"answer: \", this.state.form.ans);\r\n        console.log(\"leftshit first: \", this.CaesarCipher(this.state.form.cipherQuestion, parseInt(cipher)))\r\n        console.log(\"leftshit second: \", this.state.form.cipherAns)\r\n\r\n        this.CaesarCipher(this.state.form.cipherQuestion, parseInt(cipher));\r\n\r\n\r\n        if (answers[this.state.form.randomNumber] == this.state.form.ans && this.CaesarCipher(this.state.form.cipherQuestion, parseInt(cipher)) == this.state.form.cipherAns) {\r\n          \r\n          \r\n          \r\n            var AWS = require(\"aws-sdk\");\r\n            let awsConfig = {\r\n                \"region\": \"us-east-1\",\r\n                \"accessKeyId\": \"AKIA4RW42NZLJPIGWUHA\", \"secretAccessKey\": \"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\"\r\n            };\r\n            AWS.config.update(awsConfig);\r\n            let docClient = new AWS.DynamoDB.DocumentClient();\r\n            let boxNumber = localStorage.getItem(\"boxNumber\");\r\n                console.log(boxNumber);\r\n                let emailId = localStorage.getItem(\"email\");\r\n            var params = {\r\n                TableName: \"loginstatistics\",\r\n                Key: {\r\n                    \"boxNumber\": boxNumber\r\n                }\r\n            };\r\n            docClient.get(params, function (err, data) {\r\n                if (err) {\r\n                    console.log(\"users::fetchOneByKey::error - \" + JSON.stringify(err, null, 2));\r\n                }\r\n                else {\r\n                    console.log(\"users::fetchOneByKey::success - \" + JSON.stringify(data, null, 2));\r\n                    var today = new Date();\r\n                    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n                    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n                    var dateTime = date + ' ' + time;\r\n                    var input ;\r\n                    console.log(data);\r\n                    if(!data.Item)\r\n                    {\r\n                        input = {\r\n                            \"boxNumber\": boxNumber,\r\n                            \"line\": ['Logged' + ' user: '+emailId + ' at: ' + dateTime]\r\n                        };\r\n                    \r\n                }\r\n                else{\r\n                    var input = {\r\n                        \"boxNumber\": boxNumber,\r\n                        \"line\": data.Item.line.concat(['Logged' + ' user: '+emailId + ' at: ' + dateTime])\r\n                    };\r\n                }\r\n                    var params = {\r\n                        TableName: \"loginstatistics\",\r\n                        Item: input\r\n                    };\r\n                    docClient.put(params, function (err, data) {\r\n        \r\n                        if (err) {\r\n                            console.log(\"users::save::error - \" + JSON.stringify(err, null, 2));\r\n                        } else {\r\n                            console.log(\"users::save::success\");\r\n                            window.location=\"https://frontend-l2m7wjsa5q-uc.a.run.app/home/user1\";\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n        \r\n         \r\n            \r\n\r\n        } else {\r\n            this.setState({ error: true })\r\n\r\n\r\n        }\r\n    }\r\n\r\n    getData = () => {\r\n\r\n        return <React.Fragment>\r\n            <div className=\"card col-md-5 color\">\r\n                <h3>2-way authentication</h3>\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{this.state.form.random[this.state.form.randomNumber]}</td>\r\n                            <td>:</td>\r\n                            <td><input id=\"ans\" type=\"text\" className=\"form-control\" placeholder=\"Answer Required*\" value={this.state.form.ans} onChange={this.handleInp} /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Cipher of '{this.state.form.cipherQuestion}'</td>\r\n                            <td>:</td>\r\n                            <td><input id=\"cipherAns\" type=\"text\" className=\"form-control\" placeholder=\"Answer Required*\" value={this.state.form.cipherAns} onChange={this.handleInp} /></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                {\r\n                    this.state.loading ?\r\n                        <button className=\"btn btn-success\" type=\"button\" disabled>\r\n                            <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                            Loading...\r\n                        </button>\r\n                        :\r\n                        <button className=\"btn btn-success\" onClick={this.login}>Login</button>\r\n                }\r\n                <br></br>\r\n            </div>\r\n            {\r\n                this.state.error ?\r\n                    <div class=\"alert alert-danger\" role=\"alert\">\r\n                        Invalid credentials\r\n                    </div>\r\n                    : \"\"\r\n            }\r\n\r\n        </React.Fragment>\r\n    }\r\n    render() {\r\n        return (\r\n            this.getData()\r\n        )\r\n    }\r\n}\r\n\r\nexport default QuestionPage\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Login from './components/Login/Login';\r\nimport Registration from './components/Registration/Registration';\r\nimport { BrowserRouter , Route,Link } from 'react-router-dom';\r\nimport Dashboard from './components/Dashboard/Dashboard';\r\nimport QuestionPage from './components/QuestionsPage/QuestionPage';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n    <div className=\"App\">\r\n     \r\n      <Route path=\"/\"   exact={true} component={Login} />\r\n      <Route path=\"/registration\"   exact={true} component={Registration} />\r\n      <Route path=\"/questionpage\"  exact={true} component={QuestionPage} />\r\n      <Route path=\"/dashboard\"   exact={true} component={Dashboard} />\r\n\r\n      \r\n       \r\n    </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}